@page "/"
@using AutoTest.Model
@rendermode InteractiveServer

<h1 id="titrePage">Pomodoro Timer</h1>

<div class="timer">
    <span>@DisplayMinutes</span>:<span>@DisplaySeconds</span>
</div>

<div class="session-info">
    <span id="currentSession">@SessionType</span>
</div>

<div class="controls">
    <div>
        <label>Travail (minutes):</label>
        <input id="tpsTravail" type="number" min="1" max="60" @bind="pomodoroTimer.WorkDuration" @oninput="UpdateWorkDuration" />
    </div>
    <div>
        <label>Pause (minutes):</label>
        <input id="tpsPause" type="number" min="1" max="60" @bind="pomodoroTimer.BreakDuration" @oninput="UpdateBreakDuration" />
    </div>
    <button id="startBtn" @onclick="StartTimer" disabled="@pomodoroTimer.IsTimerRunning">Start</button>
    <button id="endBtn" @onclick="ResetTimer">Reset</button>
</div>

<div>
    <label>Nombre de sessions de travail:</label>
    <span id="nbSessions">@pomodoroTimer.SessionCount</span>
</div>

@code {
    private PomodoroTimer pomodoroTimer = new PomodoroTimer();

    private string DisplayMinutes => pomodoroTimer.Minutes.ToString("D2");
    private string DisplaySeconds => pomodoroTimer.Seconds.ToString("D2");
    private string SessionType => pomodoroTimer.IsWorkSession ? "Session de travail" : "Pause";

    private async Task StartTimer()
    {
        await pomodoroTimer.StartTimer();
    }

    private async Task ResetTimer()
    {
        await pomodoroTimer.ResetTimer();
    }

    private void UpdateWorkDuration(ChangeEventArgs e)
    {
        int newValue;
        if (int.TryParse(e.Value.ToString(), out newValue))
        {
            pomodoroTimer.UpdateWorkDuration(newValue);
        }
    }

    private void UpdateBreakDuration(ChangeEventArgs e)
    {
        int newValue;
        if (int.TryParse(e.Value.ToString(), out newValue))
        {
            pomodoroTimer.UpdateBreakDuration(newValue);
        }
    }
}

<style>
    .timer {
        font-size: 36px;
        margin: 20px 0;
    }

    .session-info {
        font-size: 18px;
        margin-bottom: 10px;
    }

    .controls {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

        .controls div {
            margin-bottom: 10px;
        }

        .controls label {
            font-weight: bold;
        }

        .controls input[type="number"] {
            width: 50px;
            padding: 5px;
            font-size: 16px;
        }

        .controls button {
            font-size: 18px;
            padding: 10px 20px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            margin-right: 10px;
        }

            .controls button:disabled {
                background-color: grey;
                cursor: not-allowed;
            }
</style>
